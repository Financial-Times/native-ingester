apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      containers: 
      - name: {{ .Chart.Name }} 
        image: "{{ .Values.image.repository }}:{{ required "Please provide a valid docker image version by adding the argument at install '--set image.version=...'" .Values.image.version }}" 
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
       - name: Q_READ_ADDR
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.proxy.url.with.protocol
        - name: Q_READ_GROUP
          value: {{ .Values.env.QUEUE_READ_GROUP }}
        - name: Q_READ_TOPIC
          value: {{ .Values.env.QUEUE_READ_TOPIC }}
        - name: NATIVE_CONTENT_UUID_FIELDS
          value: {{ .Values.env.NATIVE_CONTENT_UUID_FIELDS }}
        - name: NATIVE_RW_ADDRESS
          value: "http://nativerw:8080"
        - name: NATIVE_RW_COLLECTIONS_BY_ORIGINS
          value: {{ .Values.env.NATIVE_RW_COLLECTIONS_BY_ORIGINS }}
        - name: Q_WRITE_ADDR
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.proxy.url.with.protocol
        - name: Q_WRITE_TOPIC
          value: {{ .Values.env.QUEUE_WRITE_TOPIC }}
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 10 
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 15
          periodSeconds: 30 
        resources: 
{{ toYaml .Values.resources | indent 12 }}

